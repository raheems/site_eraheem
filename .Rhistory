) %>%
arrange(desc(max_n_dead)) %>%
top_n(10, max_n_dead)
View(n_south_asia)
dead_south_asia <- df_south_asia %>%
filter(country %in% n_south_asia$country, cum_dead >0) %>%
arrange(country, cum_dead) %>%
group_by(country) %>%
mutate(
id = row_number()
)
View(dead_south_asia)
# Plot
ggplot(dead_south_asia, aes(x = id, y = cum_dead, color=country)) +
geom_line() +
geom_point(data = dead[dead$country == 'Bangladesh' & mdy(dead$Date)==last_reported_date, ], aes(x=id, y=cum_dead), color='red', size=5) +
geom_text_repel(aes(label=country),
function(df) df[mdy(df$Date) == last_reported_date, ])+
theme_minimal(base_size = 14) +
theme(legend.position = "none") +
# theme_void() +
theme(legend.position="none") +
ggtitle("COVID19 cumulative deaths since first death \n(top 5 countries)", as.Date(last_reported_date) ) +
xlab("Days since first death") +
ylab("Cumulative deaths")
last_reported_date =  mdy("3/26/2020")
# Plot
ggplot(dead_south_asia, aes(x = id, y = cum_dead, color=country)) +
geom_line() +
geom_point(data = dead[dead$country == 'Bangladesh' & mdy(dead$Date)==last_reported_date, ], aes(x=id, y=cum_dead), color='red', size=5) +
geom_text_repel(aes(label=country),
function(df) df[mdy(df$Date) == last_reported_date, ])+
theme_minimal(base_size = 14) +
theme(legend.position = "none") +
# theme_void() +
theme(legend.position="none") +
ggtitle("COVID19 cumulative deaths since first death \n(top 5 countries)", as.Date(last_reported_date) ) +
xlab("Days since first death") +
ylab("Cumulative deaths")
# Summary of deaths till date by country
dead_south_asia %>%
filter(mdy(Date) == last_reported_date) %>%
group_by(country) %>%
summarise(
TotalDeath = max(cum_dead)
)
# Summary of deaths till date by country
dead_south_asia %>%
filter(mdy(Date) == last_reported_date) %>%
group_by(country) %>%
summarise(
TotalDeath = max(cum_dead)
) %>%
arrange(desc(otalDeath))
# Summary of deaths till date by country
dead_south_asia %>%
filter(mdy(Date) == last_reported_date) %>%
group_by(country) %>%
summarise(
TotalDeath = max(cum_dead)
) %>%
arrange(desc(TotalDeath))
# Summary of deaths till date by country
sa_summary <- dead_south_asia %>%
filter(mdy(Date) == last_reported_date) %>%
group_by(country) %>%
summarise(
TotalDeath = max(cum_dead)
) %>%
arrange(desc(TotalDeath))
knitr::kable(sa_summary, "markdown")
jhu_url <- paste("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv", sep = "")
us_confirmed_long_jhu <- read_csv(jhu_url)
df <- us_confirmed_long_jhu %>%
rename(province = "Province/State",
country = "Country/Region") %>%
# Exclude China
filter(
country != "China"
) %>%
pivot_longer(-c(province, country, Lat, Long),
names_to = "Date", values_to = "cum_dead") %>%
select(country, Date, cum_dead) %>%
group_by(country, Date) %>%
summarize(
cum_dead = sum(cum_dead)
)
df_bd <- us_confirmed_long_jhu %>%
rename(province = "Province/State",
country = "Country/Region") %>%
# Exclude China
filter(
country == "Bangladesh"
) %>%
pivot_longer(-c(province, country, Lat, Long),
names_to = "Date", values_to = "cum_dead") %>%
select(country, Date, cum_dead) %>%
group_by(country, Date) %>%
summarize(
cum_dead = sum(cum_dead)
)
n_world <- df %>%
group_by(country) %>%
summarise(
max_n_dead = max(cum_dead)
) %>%
arrange(desc(max_n_dead)) %>%
top_n(5, max_n_dead)
# n for Bangladesh
n_bd <- df_bd %>% group_by(country) %>%
summarise(
max_n_dead = max(cum_dead)
)
# Combined n countries
n <- rbind(n_world, n_bd)
dead <- df %>%
filter(country %in% n$country, cum_dead >0) %>%
arrange(country, cum_dead) %>%
group_by(country) %>%
mutate(
id = row_number()
)
clsas(df$Date)
class(df$Date)
df$Date
mdy(df$Date)
max(mdy(df$Date))
jhu_url <- paste("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv", sep = "")
us_confirmed_long_jhu <- read_csv(jhu_url)
jhu_deaths_global <- paste("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv", sep = "")
jhu_deaths_global_long <- read_csv(jhu_deaths_global)
# Load packages
require(ggplot2)
require(ggrepel)
require(tidyverse)
require(lubridate)
require(knitr)
require(kableExtra)
jhu_deaths_global_long <- read_csv(jhu_deaths_global)
jhu_deaths_global <- paste("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv", sep = "")
jhu_confirmed_global <- paste("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv", sep
jhu_deaths_global <- read_csv(jhu_deaths_global_src)
jhu_confirmed_global <- read_csv(jhu_confirmed_global_src)
# Load packages
require(ggplot2)
require(ggrepel)
require(tidyverse)
require(lubridate)
jhu_deaths_global <- read_csv(jhu_deaths_global_src)
jhu_deaths_global_src <- paste("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv", sep = "")
jhu_confirmed_global_src <- paste("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv", sep = "")
jhu_deaths_global <- read_csv(jhu_deaths_global_src)
jhu_confirmed_global <- read_csv(jhu_confirmed_global_src)
# Create working data set
df_confirmed <- jhu_confirmed_global %>%
rename(province = "Province/State",
country = "Country/Region") %>%
# Exclude China
filter(
country != "ChinÏ€a"
) %>%
pivot_longer(-c(province, country, Lat, Long),
names_to = "Date", values_to = "cum_dead") %>%
select(country, Date, cum_dead) %>%
group_by(country, Date) %>%
summarize(
cum_dead = sum(cum_dead)
)
View(df_confirmed)
df_bd <- jhu_confirmed_global %>%
rename(province = "Province/State",
country = "Country/Region") %>%
# Exclude China
filter(
country == "Bangladesh"
) %>%
pivot_longer(-c(province, country, Lat, Long),
names_to = "Date", values_to = "cum_dead") %>%
select(country, Date, cum_dead) %>%
group_by(country, Date) %>%
summarize(
cum_dead = sum(cum_dead)
)
View(df_bd)
df_bd <- jhu_confirmed_global %>%
rename(province = "Province/State",
country = "Country/Region") %>%
# Exclude China
filter(
country == "Bangladesh"
) %>%
pivot_longer(-c(province, country, Lat, Long),
names_to = "Date", values_to = "cum_dead") %>%
select(country, Date, cum_dead)
df_bd <- jhu_confirmed_global %>%
rename(province = "Province/State",
country = "Country/Region") %>%
# Exclude China
filter(
country == "Bangladesh"
) %>%
pivot_longer(-c(province, country, Lat, Long),
names_to = "Date", values_to = "cum_dead") %>%
select(country, Date, cum_dead) %>%
arrange(Date)
df_bd <- jhu_confirmed_global %>%
rename(province = "Province/State",
country = "Country/Region") %>%
# Exclude China
filter(
country == "Bangladesh"
) %>%
pivot_longer(-c(province, country, Lat, Long),
names_to = "Date", values_to = "cum_dead") %>%
select(country, Date, cum_dead) %>%
mutate(
Date = ymd(Date)
)
?ymd
df_bd <- jhu_confirmed_global %>%
rename(province = "Province/State",
country = "Country/Region") %>%
# Exclude China
filter(
country == "Bangladesh"
) %>%
pivot_longer(-c(province, country, Lat, Long),
names_to = "Date", values_to = "cum_dead") %>%
select(country, Date, cum_dead)
df_bd <- jhu_confirmed_global %>%
rename(province = "Province/State",
country = "Country/Region") %>%
# Exclude China
filter(
country == "Bangladesh"
) %>%
pivot_longer(-c(province, country, Lat, Long),
names_to = "Date", values_to = "cum_dead") %>%
select(country, Date, cum_dead) %>%
mutate(
Date = mdy(Date, )
)
df_bd <- jhu_confirmed_global %>%
rename(province = "Province/State",
country = "Country/Region") %>%
# Exclude China
filter(
country == "Bangladesh"
) %>%
pivot_longer(-c(province, country, Lat, Long),
names_to = "Date", values_to = "cum_dead") %>%
select(country, Date, cum_dead) %>%
mutate(
Date = mdy(Date )
)
?diff
df_bd <- jhu_confirmed_global %>%
rename(province = "Province/State",
country = "Country/Region") %>%
# Exclude China
filter(
country == "Bangladesh"
) %>%
pivot_longer(-c(province, country, Lat, Long),
names_to = "Date", values_to = "cum_dead") %>%
select(country, Date, cum_dead) %>%
mutate(
Date = mdy(Date ),
daily_deaths = diff(cum_dead)
)
df_bd <- jhu_confirmed_global %>%
rename(province = "Province/State",
country = "Country/Region") %>%
# Exclude China
filter(
country == "Bangladesh"
) %>%
pivot_longer(-c(province, country, Lat, Long),
names_to = "Date", values_to = "cases") %>%
select(country, Date, cases) %>%
mutate(
Date = mdy(Date ),
daily_deaths = diff(cases)
)
df_bd <- jhu_confirmed_global %>%
rename(province = "Province/State",
country = "Country/Region") %>%
# Exclude China
filter(
country == "Bangladesh"
) %>%
pivot_longer(-c(province, country, Lat, Long),
names_to = "Date", values_to = "cases") %>%
select(country, Date, cases)
diff(1:10)
diff(2:5)
diff(1,2,4)
diff(c(1,2,4))
df_bd <- jhu_confirmed_global %>%
rename(province = "Province/State",
country = "Country/Region") %>%
# Exclude China
filter(
country == "Bangladesh"
) %>%
pivot_longer(-c(province, country, Lat, Long),
names_to = "Date", values_to = "cases") %>%
select(country, Date, cases) %>%
mutate(
Date = mdy(Date ),
daily_deaths = c(0, diff(cases))
)
df_bd <- jhu_confirmed_global %>%
rename(province = "Province/State",
country = "Country/Region") %>%
# Exclude China
filter(
country == "Bangladesh"
) %>%
pivot_longer(-c(province, country, Lat, Long),
names_to = "Date", values_to = "cum_cases") %>%
select(country, Date, cum_cases) %>%
mutate(
Date = mdy(Date ),
daily_cases = c(0, diff(cum_cases))
)
df_bd <- jhu_confirmed_global %>%
rename(province = "Province/State",
country = "Country/Region") %>%
# Exclude China
filter(
country == "Bangladesh"
) %>%
pivot_longer(-c(province, country, Lat, Long),
names_to = "Date", values_to = "cum_cases") %>%
select(country, Date, cum_cases) %>%
mutate(
Date = mdy(Date ),
daily_cases = c(0, diff(cum_cases)),
pct = (daily_cases/lead(daily_cases) - 1) * 100
)
df_bd <- jhu_confirmed_global %>%
rename(province = "Province/State",
country = "Country/Region") %>%
# Exclude China
filter(
country == "Bangladesh"
) %>%
pivot_longer(-c(province, country, Lat, Long),
names_to = "Date", values_to = "cum_cases") %>%
select(country, Date, cum_cases) %>%
mutate(
Date = mdy(Date ),
daily_cases = c(0, diff(cum_cases)),
pct = (cum_cases-daily_cases)/cum_cases * 100
)
>kead
?lead
lead(1:2,1)
lead(1:3,1)
df_bd <- jhu_confirmed_global %>%
rename(province = "Province/State",
country = "Country/Region") %>%
# Exclude China
filter(
country == "Bangladesh"
) %>%
pivot_longer(-c(province, country, Lat, Long),
names_to = "Date", values_to = "cum_cases") %>%
select(country, Date, cum_cases) %>%
mutate(
Date = mdy(Date ),
daily_cases = c(0, diff(cum_cases)),
pct = (daily_cases/lead(daily_cases) -1) * 100
)
x = c(2, 5, 10)
lag(x)
x - lag(x)
(x - lag(x))/lag(x)
x = c(2, 4, 8, 4)
(x - lag(x))/lag(x)
(x - lag(x))/lag(x) * 100
df_bd <- jhu_confirmed_global %>%
rename(province = "Province/State",
country = "Country/Region") %>%
# Exclude China
filter(
country == "Bangladesh"
) %>%
pivot_longer(-c(province, country, Lat, Long),
names_to = "Date", values_to = "cum_cases") %>%
select(country, Date, cum_cases) %>%
mutate(
Date = mdy(Date ),
daily_cases = c(0, diff(cum_cases)),
pct = daily_cases/lag(daily_cases) * 100
)
perturb(0)
?jitter
jitter(0)
jitter(0, factor = .0001)
jitter(0, factor = 1.0001)
jitter(0, factor = 2)
jitter(0, amount = 0.0001)
jitter(0, 5)
jitter(0, 5)
jitter(0, 5)
jitter(0, 1)
jitter(0)
jitter(0)
jitter(0)
df_bd <- jhu_confirmed_global %>%
rename(province = "Province/State",
country = "Country/Region") %>%
# Exclude China
filter(
country == "Bangladesh"
) %>%
pivot_longer(-c(province, country, Lat, Long),
names_to = "Date", values_to = "cum_cases") %>%
select(country, Date, cum_cases) %>%
mutate(
Date = mdy(Date ),
daily_cases = c(0, diff(cum_cases)),
daily_cases_rand = jitter(daily_cases),
pct = daily_cases_rand/lag(daily_cases_rand) * 100
)
df_bd <- jhu_confirmed_global %>%
rename(province = "Province/State",
country = "Country/Region") %>%
# Exclude China
filter(
country == "Bangladesh"
) %>%
pivot_longer(-c(province, country, Lat, Long),
names_to = "Date", values_to = "cum_cases") %>%
select(country, Date, cum_cases) %>%
mutate(
Date = mdy(Date ),
daily_cases = c(0, diff(cum_cases)),
daily_cases_rand = jitter(daily_cases),
pct_rand = daily_cases_rand/lag(daily_cases_rand) * 100,
pct = daily_cases/lag(daily_cases) * 100
)
df_bd <- jhu_confirmed_global %>%
rename(province = "Province/State",
country = "Country/Region") %>%
# Exclude China
filter(
country == "Bangladesh"
) %>%
pivot_longer(-c(province, country, Lat, Long),
names_to = "Date", values_to = "cum_cases") %>%
select(country, Date, cum_cases) %>%
mutate(
Date = mdy(Date ),
daily_cases = c(0, diff(cum_cases)),
daily_cases_rand = ifelse(daily_cases==0, daily_cases+0.001, daily_cases),
pct_rand = daily_cases_rand/lag(daily_cases_rand) * 100,
pct = daily_cases/lag(daily_cases) * 100
)
df_bd <- jhu_confirmed_global %>%
rename(province = "Province/State",
country = "Country/Region") %>%
# Exclude China
filter(
country == "Bangladesh"
) %>%
pivot_longer(-c(province, country, Lat, Long),
names_to = "Date", values_to = "cum_cases") %>%
select(country, Date, cum_cases) %>%
mutate(
Date = mdy(Date ),
daily_cases = c(0, diff(cum_cases)),
daily_cases_rand = ifelse(daily_cases==0, daily_cases+0.01, daily_cases),
pct_rand = daily_cases_rand/lag(daily_cases_rand) * 100,
pct = daily_cases/lag(daily_cases) * 100
)
df_bd <- jhu_confirmed_global %>%
rename(province = "Province/State",
country = "Country/Region") %>%
# Exclude China
filter(
country == "Bangladesh"
) %>%
pivot_longer(-c(province, country, Lat, Long),
names_to = "Date", values_to = "cum_cases") %>%
select(country, Date, cum_cases) %>%
mutate(
Date = mdy(Date ),
daily_cases = c(0, diff(cum_cases)),
daily_cases_rand = ifelse(daily_cases==0, daily_cases+0.1, daily_cases),
pct_rand = daily_cases_rand/lag(daily_cases_rand) * 100,
pct = daily_cases/lag(daily_cases) * 100
)
df_bd <- jhu_confirmed_global %>%
rename(province = "Province/State",
country = "Country/Region") %>%
# Exclude China
filter(
country == "Bangladesh"
) %>%
pivot_longer(-c(province, country, Lat, Long),
names_to = "Date", values_to = "cum_cases") %>%
select(country, Date, cum_cases) %>%
mutate(
Date = mdy(Date ),
daily_cases = c(0, diff(cum_cases)),
daily_cases_rand = ifelse(daily_cases==0, daily_cases+0.001, daily_cases),
pct_rand = daily_cases_rand/lag(daily_cases_rand) * 100,
pct = daily_cases/lag(daily_cases) * 100
)
